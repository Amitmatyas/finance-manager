<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <title>מנהל כספים - מאת עמית מטיאס</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>💰</text></svg>">
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
    <div class="container mx-auto max-w-md bg-white rounded-xl shadow-2xl p-6">
        <div class="text-center mb-6">
            <h1 class="text-3xl font-bold text-blue-600">מנהל כספים</h1>
            <p class="text-sm text-gray-500 mt-1">מאת: עמית מטיאס</p>
        </div>
        
        <div class="mb-6">
            <div id="balance" class="text-center text-4xl font-extrabold text-green-600">0 ₪</div>
        </div>

        <div class="flex space-x-4 mb-6">
            <button id="incomeBtn" class="flex-1 bg-green-500 text-white py-3 rounded-lg hover:bg-green-600 transition">
                <span class="text-xl">➕ הכנסה</span>
            </button>
            <button id="expenseBtn" class="flex-1 bg-red-500 text-white py-3 rounded-lg hover:bg-red-600 transition">
                <span class="text-xl">➖ הוצאה</span>
            </button>
        </div>

        <div class="bg-gray-100 rounded-lg p-4">
            <h2 class="text-xl font-bold mb-4 text-gray-700">היסטוריית תנועות</h2>
            <ul id="transactions" class="space-y-2 max-h-64 overflow-y-auto"></ul>
        </div>

        <canvas id="chartArea" class="mt-6 w-full"></canvas>

        <!-- Modal -->
        <div id="transactionModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
            <div class="bg-white rounded-xl p-6 w-96">
                <h2 id="modalTitle" class="text-2xl font-bold mb-4"></h2>
                <input id="amountInput" type="number" placeholder="סכום" 
                       class="w-full p-3 border rounded-lg mb-4 text-right">
                <input id="descriptionInput" type="text" placeholder="תיאור (אופציונלי)" 
                       class="w-full p-3 border rounded-lg mb-4 text-right">
                <div class="flex space-x-4">
                    <button onclick="saveTransaction()" 
                            class="flex-1 bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600">
                        שמור
                    </button>
                    <button onclick="closeModal()" 
                            class="flex-1 bg-gray-300 text-gray-700 py-3 rounded-lg hover:bg-gray-400">
                        ביטול
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // קריאת נתונים מהזיכרון המקומי
        let balance = parseFloat(localStorage.getItem('balance')) || 0;
        let transactions = JSON.parse(localStorage.getItem('transactions')) || [];
        let chart = null;

        // פונקציה לשמירת נתונים בזיכרון המקומי
        function saveToLocalStorage() {
            localStorage.setItem('balance', balance);
            localStorage.setItem('transactions', JSON.stringify(transactions));
        }

        // הפעלה ראשונית של ממשק משתמש
        function initializeUI() {
            updateUI();
            
            // הוספת אנימציה לטעינת נתונים
            const balanceEl = document.getElementById('balance');
            balanceEl.classList.add('animate-pulse');
            setTimeout(() => {
                balanceEl.classList.remove('animate-pulse');
            }, 1000);
        }

        function openModal(type) {
            const modal = document.getElementById('transactionModal');
            const titleEl = document.getElementById('modalTitle');
            const amountInput = document.getElementById('amountInput');
            const descriptionInput = document.getElementById('descriptionInput');

            modal.classList.remove('hidden');
            modal.classList.add('flex');
            
            amountInput.value = '';
            descriptionInput.value = '';

            if (type === 'income') {
                titleEl.textContent = 'הוספת הכנסה';
                titleEl.classList.remove('text-red-600');
                titleEl.classList.add('text-green-600');
            } else {
                titleEl.textContent = 'הוספת הוצאה';
                titleEl.classList.remove('text-green-600');
                titleEl.classList.add('text-red-600');
            }

            modal.dataset.type = type;
        }

        function closeModal() {
            const modal = document.getElementById('transactionModal');
            modal.classList.remove('flex');
            modal.classList.add('hidden');
        }

        function saveTransaction() {
            const amountInput = document.getElementById('amountInput');
            const descriptionInput = document.getElementById('descriptionInput');
            const type = document.getElementById('transactionModal').dataset.type;

            const amount = parseFloat(amountInput.value);
            const description = descriptionInput.value || 'ללא תיאור';

            if (!amount) {
                alert('אנא הזן סכום');
                return;
            }

            if (type === 'expense' && amount > balance) {
                alert('אין מספיק כסף בחשבון');
                return;
            }

            const transaction = {
                type,
                amount,
                description,
                date: new Date().toLocaleDateString()
            };

            transactions.unshift(transaction);
            balance += type === 'income' ? amount : -amount;

            // שמירת נתונים בזיכרון המקומי
            saveToLocalStorage();
            
            updateUI();
            closeModal();
        }

        function updateUI() {
            const balanceEl = document.getElementById('balance');
            const transactionsEl = document.getElementById('transactions');

            balanceEl.textContent = `${balance} ₪`;
            
            transactionsEl.innerHTML = transactions.map(t => `
                <li class="flex justify-between p-2 rounded-lg ${t.type === 'income' ? 'bg-green-100' : 'bg-red-100'}">
                    <span>${t.description}</span>
                    <span class="${t.type === 'income' ? 'text-green-600' : 'text-red-600'}">
                        ${t.type === 'income' ? '+' : '-'} ${t.amount} ₪
                    </span>
                </li>
            `).join('');

            updateChart();
        }

        function updateChart() {
            const ctx = document.getElementById('chartArea').getContext('2d');
            
            if (chart) chart.destroy();

            const incomeData = transactions
                .filter(t => t.type === 'income')
                .map(t => t.amount);

            const expenseData = transactions
                .filter(t => t.type === 'expense')
                .map(t => t.amount);

            chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['הכנסות', 'הוצאות'],
                    datasets: [{
                        data: [
                            incomeData.reduce((a, b) => a + b, 0),
                            expenseData.reduce((a, b) => a + b, 0)
                        ],
                        backgroundColor: ['#10B981', '#EF4444']
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        }

        // מאזין אירועים לכפתורים
        document.getElementById('incomeBtn').addEventListener('click', () => openModal('income'));
        document.getElementById('expenseBtn').addEventListener('click', () => openModal('expense'));

        // אתחול ממשק משתמש בטעינת העמוד
        window.onload = initializeUI;
    </script>
</body>
</html>
